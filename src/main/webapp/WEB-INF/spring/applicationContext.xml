<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
		
	<!-- 使用占位符，附加props配置文件 -->
	<context:property-placeholder location="classpath:/com/hg/ecommerce/config/project.properties" />
	
	<!-- 使用注解 -->
	<mvc:annotation-driven />
	<context:annotation-config></context:annotation-config>
	
	<context:component-scan base-package="com.hg.ecommerce.dao.impl">
		<!-- <context:include-filter type="annotation" expression=""/> -->
	</context:component-scan>
	<context:component-scan base-package="com.hg.ecommerce.action" />
	<context:component-scan base-package="com.hg.ecommerce.service.impl" />
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/views/" p:suffix=".jsp"></bean>


	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${db.driverClassName}" />

		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
	    <constructor-arg ref="dataSource"></constructor-arg>
	</bean>
	
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	
	<!-- 事物配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 不采取声明式事物主要是为了照顾BaseDaoImpl，它并非是一个Bean，但是他的方法必须在事务的保护之下 -->
	<tx:annotation-driven proxy-target-class="true"/>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="upsert" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<bean id="serviceWrapper" class="com.hg.ecommerce.service.support.ServiceWrapper"></bean>
	<aop:config>
	    <!-- impl下的一切dao实现类均无需使用声明式事务注解，勿忘为Service类添加声明式注解 -->
		<aop:pointcut expression="execution(public * com.hg.ecommerce.dao.impl..*.*(..))"
			id="daoTransaction" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="daoTransaction" />
		
		<aop:aspect ref="serviceWrapper">
			<aop:pointcut id="booleanReturnCut"
				expression="execution(public boolean com.hg.ecommerce.service.*Service+.*(..))" />
			<aop:pointcut id="entityObjectReturnCut"
				expression="execution(public com.hg.ecommerce.model.support.EntityObject+ com.hg.ecommerce.service.*Service+.*(..))" />
			<aop:pointcut id="collectionObjectReturnCut"
				expression="execution(public java.util.Collection+ com.hg.ecommerce.service.*Service+.*(..))" />

			<aop:around pointcut-ref="booleanReturnCut"
				method="booleanAroundMethod"/>
			<aop:around pointcut-ref="entityObjectReturnCut"
				method="objectAroundMethod"  />
			<aop:around pointcut-ref="collectionObjectReturnCut"
				method="objectAroundMethod"  />

		</aop:aspect>
	</aop:config>

</beans>
